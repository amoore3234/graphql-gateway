scalar Long
scalar DateTime
scalar Date

schema {
  query:Query
  mutation:Mutation
}

type Query {
  getUserById(id:Long!):User
}

type Mutation {
  createUser(user:UserInput):User
  updateUser(id:Long, user:UserInput):User
}

type EmployeeDetail {
  id:ID!
  userLogin:User!
  firstName:String
  lastName:String
  employeeStatus:String
  employeeType:String
  employeeGrade:String
  startDate:Date
  endDate:Date
}

type EmployeeTimesheet {
  id:ID!
  employeeDetail:EmployeeDetail!
  timesheet:Timesheet!
  weeklyPeriodDate:Date
  weeklyHoursWorked:Int
}

type Holiday {
  id:ID!
  timesheet:Timesheet!
  holidayName:String
  date:Date
}

type Project {
  id:ID!
  employeeDetail:EmployeeDetail!
  projectName:String
  startDate:Date
  endDate:Date
  projectStatus:String
}

type Timesheet {
  id:ID!
  clockIn:DateTime
  clockOut:DateTime
  lunch:DateTime
  hoursWorked:Int
  overtime:Int
}

type User {
  id:ID!
  email:String
  password:String
}

input UserInput {
  email:String!
  password:String
}